@page "/"
@using GestorEventosDeportivos.Modules.ProgresoCarreras.Application
@using GestorEventosDeportivos.Modules.ProgresoCarreras.Datatypes

@rendermode InteractiveServer

@inject IProgresoService progresoService

<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.


@code {
    
    ProgresoCarreraDTO p1, p2, p3;

    protected override async Task OnInitializedAsync()
    {
        try {
            p1 = await progresoService.VerProgresoGeneralDeCarrera(Guid.Parse("08de0c3f-2967-4fcd-8bdb-95b7a0a0b4b6"));
            p2 = await progresoService.VerProgresoGeneralDeCarrera(Guid.Parse("08de0c3f-2976-4428-8cd3-6fc20de5ff3d"));
            p3 = await progresoService.VerProgresoGeneralDeCarrera(Guid.Parse("08de0c3f-2976-4bc7-8c75-60e2e19bc3d9"));
        } catch (NotFoundException) {
            Console.WriteLine("No existe una de las carreras");
            return;
        }
       

        Console.WriteLine($"\nP1: {p1.CarreraNombre}, #Participantes: {p1.Participantes.Count}");
        Console.WriteLine("Progreso carrera 1: ");
        foreach (KeyValuePair<uint, ProgresoPuntoDeControlDTO> pc in p1.ProgresoPorPuntosDeControl) {
            Console.WriteLine($"Punto {pc.Key}: Posicion {pc.Value.Posicion}, Tiempos:");
            foreach (
                KeyValuePair<string, TimeSpan?> t in 
                pc.Value.TiemposDeParticipantes.OrderBy(k => k.Value == null).ThenBy(k => k.Value)) {
                Console.WriteLine($"{t.Key} / Tiempo: {t.Value}");
            }
        }

        Console.WriteLine($"\nP2: {p2.CarreraNombre}");

        Console.WriteLine($"\nP3: {p3.CarreraNombre}");
        Console.WriteLine("Progreso carrera 3: ");
        foreach (KeyValuePair<uint, ProgresoPuntoDeControlDTO> pc in p3.ProgresoPorPuntosDeControl) {
            Console.WriteLine($"Punto {pc.Key}: Posicion {pc.Value.Posicion}, Tiempos:");
            foreach (KeyValuePair<string, TimeSpan?> t in pc.Value.TiemposDeParticipantes.OrderBy(k => k.Value == null).ThenBy(k => k.Value)) {
                Console.WriteLine($"{t.Key} / Tiempo: {t.Value}");
            }
        }


    }
}