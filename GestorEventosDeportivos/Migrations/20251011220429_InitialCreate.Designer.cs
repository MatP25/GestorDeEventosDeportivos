// <auto-generated />
using System;
using GestorEventosDeportivos.Shared.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestorEventosDeportivos.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251011220429_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("GestorEventosDeportivos.Modules.Carreras.Domain.Entities.Carrera", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("EventoId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Ganador")
                        .HasColumnType("longtext");

                    b.Property<uint>("Longitud")
                        .HasColumnType("int unsigned");

                    b.Property<TimeSpan?>("TiempoGanador")
                        .HasColumnType("time(6)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("EventoId");

                    b.ToTable("Carreras");
                });

            modelBuilder.Entity("GestorEventosDeportivos.Modules.Carreras.Domain.Entities.Evento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<uint>("CantidadParticipantes")
                        .HasColumnType("int unsigned");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EstadoEvento")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("RegistroHabilitado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("GestorEventosDeportivos.Modules.Carreras.Domain.Entities.PuntoDeControl", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<Guid>("CarreraId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<uint>("Posicion")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CarreraId");

                    b.ToTable("PuntosDeControl");
                });

            modelBuilder.Entity("GestorEventosDeportivos.Modules.ProgresoCarreras.Domain.Entities.Participacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("CarreraId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<Guid>("EventoId")
                        .HasColumnType("char(36)");

                    b.Property<uint>("NumeroCorredor")
                        .HasColumnType("int unsigned");

                    b.Property<Guid>("ParticipanteId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Progreso")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<uint>("Puesto")
                        .HasColumnType("int unsigned");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CarreraId");

                    b.HasIndex("EventoId");

                    b.HasIndex("ParticipanteId");

                    b.ToTable("Participaciones");
                });

            modelBuilder.Entity("GestorEventosDeportivos.Modules.Usuarios.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaNac")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TipoUsuario")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("varchar(13)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasDiscriminator<string>("TipoUsuario").HasValue("Usuario");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("GestorEventosDeportivos.Modules.Usuarios.Domain.Entities.Administrador", b =>
                {
                    b.HasBaseType("GestorEventosDeportivos.Modules.Usuarios.Domain.Entities.Usuario");

                    b.HasDiscriminator().HasValue("Admin");
                });

            modelBuilder.Entity("GestorEventosDeportivos.Modules.Usuarios.Domain.Entities.Participante", b =>
                {
                    b.HasBaseType("GestorEventosDeportivos.Modules.Usuarios.Domain.Entities.Usuario");

                    b.HasDiscriminator().HasValue("Participante");
                });

            modelBuilder.Entity("GestorEventosDeportivos.Modules.Carreras.Domain.Entities.Carrera", b =>
                {
                    b.HasOne("GestorEventosDeportivos.Modules.Carreras.Domain.Entities.Evento", "Evento")
                        .WithMany("Carreras")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");
                });

            modelBuilder.Entity("GestorEventosDeportivos.Modules.Carreras.Domain.Entities.PuntoDeControl", b =>
                {
                    b.HasOne("GestorEventosDeportivos.Modules.Carreras.Domain.Entities.Carrera", "Carrera")
                        .WithMany("PuntosDeControl")
                        .HasForeignKey("CarreraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrera");
                });

            modelBuilder.Entity("GestorEventosDeportivos.Modules.ProgresoCarreras.Domain.Entities.Participacion", b =>
                {
                    b.HasOne("GestorEventosDeportivos.Modules.Carreras.Domain.Entities.Carrera", null)
                        .WithMany("Participaciones")
                        .HasForeignKey("CarreraId");

                    b.HasOne("GestorEventosDeportivos.Modules.Carreras.Domain.Entities.Evento", "Evento")
                        .WithMany()
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestorEventosDeportivos.Modules.Usuarios.Domain.Entities.Participante", "Participante")
                        .WithMany("Carreras")
                        .HasForeignKey("ParticipanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Participante");
                });

            modelBuilder.Entity("GestorEventosDeportivos.Modules.Carreras.Domain.Entities.Carrera", b =>
                {
                    b.Navigation("Participaciones");

                    b.Navigation("PuntosDeControl");
                });

            modelBuilder.Entity("GestorEventosDeportivos.Modules.Carreras.Domain.Entities.Evento", b =>
                {
                    b.Navigation("Carreras");
                });

            modelBuilder.Entity("GestorEventosDeportivos.Modules.Usuarios.Domain.Entities.Participante", b =>
                {
                    b.Navigation("Carreras");
                });
#pragma warning restore 612, 618
        }
    }
}
